error_log /dev/stderr __ENV__LOG_LEVEL;

events {
}

http {
  include mgmt.nginx.conf;
  include http.conf.inc;

  resolver __ENV__RESOLVER_ADDRESS ipv6=off valid=10s;

  lua_package_cpath "$prefix/resty_modules/lualib/?.so;;";
  lua_package_path "/lua-resty-hmac/lib/?.lua;;$prefix/lua/?.lua;;/usr/local/openresty/site/lualib/?.lua;;";

  init_by_lua_block {
    aws_signer = require "aws_signature"
  }

  log_format custom_format '$status $request $body_bytes_sent '
                               '"$http_referer" "$http_user_agent" '
                               '$upstream_addr $upstream_status $request_time $upstream_response_time';

  access_log /dev/stdout custom_format;

  upstream s3_upstream {
    server __ENV__S3_ENDPOINT max_fails=0;
  }

  server {
    listen __ENV__PORT;

    location / {
      set_by_lua $aws_datetime 'return aws_signer.get_aws_datetime()';
      set_by_lua $eight_digit_date 'return aws_signer.get_eight_digit_date()';

      set $canonical_headers "host:__ENV__S3_ENDPOINT\nx-amz-content-sha256:UNSIGNED-PAYLOAD\nx-amz-date:$aws_datetime\n";
      set $canonical_uri "/__ENV__S3_BUCKET_NAME/__ENV__KEY_PREFIX$request_uri";
      set $signed_headers "host;x-amz-content-sha256;x-amz-date";
      set $canonical_request "$request_method\n$canonical_uri\n\n$canonical_headers\n$signed_headers\nUNSIGNED-PAYLOAD";

      set_by_lua $hashed_canonical_request "return aws_signer.sha256_hex(ngx.var.canonical_request)";
      set $string_to_sign "AWS4-HMAC-SHA256\n$aws_datetime\n$eight_digit_date/__ENV__S3_REGION/s3/aws4_request\n$hashed_canonical_request";
      set_by_lua $signing_key 'return aws_signer.get_signing_key(ngx.var.eight_digit_date, "__ENV__S3_REGION", "__ENV__S3_SECRET_ACCESS_KEY")';
      set_by_lua $aws_signature 'return aws_signer.hmac_sha256_hex(ngx.var.signing_key, ngx.var.string_to_sign)';

      set $auth "AWS4-HMAC-SHA256 Credential=__ENV__S3_ACCESS_KEY_ID/$eight_digit_date/__ENV__S3_REGION/s3/aws4_request,SignedHeaders=$signed_headers,Signature=$aws_signature";

      proxy_pass_request_headers off;
      proxy_set_header x-amz-date $aws_datetime;
      proxy_set_header Authorization $auth;
      proxy_set_header Host __ENV__S3_ENDPOINT;
      proxy_set_header x-amz-content-sha256 UNSIGNED-PAYLOAD;

      # keep alive connection
      proxy_http_version 1.1;
      proxy_set_header Connection '';

      rewrite /(.*) /__ENV__S3_BUCKET_NAME/__ENV__KEY_PREFIX/$1 break;
      proxy_pass __ENV__S3_PROTOCOL://s3_upstream;
    }
  }
}
